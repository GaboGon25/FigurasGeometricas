<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9yNbvqU24swXz/V9MX/TPrTxfVrf2fODpJOvbDrAwl7i/DY91+zvG99P89fG2c++37LlbC+dfGXTAXZy
        sH6keO6+H9nyLU3P8yOZv3kf2ojXnQ/fZ96kk68sDq7J1XG2EWeNfgbq4vvVS7xY1sR2hwN6EpeGEcXZ
        MNrIto2vY+7qy8o2+vOcnO2GZbfE2f8beO35AdLJVzYdXOGqOGO9YZuIq7/2Wn2cmGuWYY3bHUO/Ytvl
        c8aya/e9X4qexNTGe+JcfTy2l06+sungCreeOWdnrDZ6MNlZqccVfx63i6+b2Rl4sV2/eXN43Ph+saw/
        bjz3xTPotF6sv/YPyMk+nDNsM7u5xGOkk69sOrjSA/YWsX1/rMV8P7usHvRtHM+Ei/kebnrwtzHGe/Hs
        1cYh5pVlN8cZpm1OXsOyvXTylU0HV7grzpA9VhurZ9SujTTgPteshtfG2YBH03qPiPOmbXifdPKV9YOr
        uSnOWL+JMI5nvcEYZ7/0XH38WDatczzIs7nMteuFc+u1Ic7i0slX1g+u5qo424hLyTHICDQcz37NGOfJ
        3FIs6+udm8tcu144t14b4iwunXxl/eBqro1z9TJymp89Vja3FMv6etlcs3qzp42Lr2m7Nrzm/BNLJ1/Z
        dHCFi3G2Md6AOQlmWDbGWek1Z9+Xk79rzE3Lro5z2Mbd2g+QTr6y6eBKD9ilWKevf25ZfD3Mj5e76Rmw
        jeNl8mK+h5eemdq49W5tf7yTddt4T5z973bxublfOvnKpoMr3HrmPB6Q03y/8TN7rDbGbWKd5c8qezAH
        fVmybay33LY/51WXlW30mLxD6E8onXxl08F1OMCbOINljgdzfN0st4mv+7rx9Sz0+L4Z4x3XjfnV143T
        srVtD9svtzlnbZs2xjN/f47M+I/SYb/Gx+Fx0slXFgfXFWavqdoYgznENc3HwRtzJ2eSNk7OktP3h5D7
        3HK7aVnfdhnpzWesNtKzXRtjnOf0v+vqWZjHSCd5HW30S+W7buLE9tPjrN5JZlvpJK+ljX72vPg6OxPb
        Tds7a36gdJLX0ka/mRRuOvPdsy33+OXT/wG2McbmqFDiBgAAAABJRU5ErkJggg==
</value>
  </data>
</root>